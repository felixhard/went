// This is an example job worker function

// When using TypeScript, you can import the types from the generated .went/generated/jobs file
// import type { ExampleJobPerformFn } from '~/.went/generated/jobs';

/**
 * Example job worker function
 * 
 * @param args - The arguments passed to the job when submitted
 * @param context - The context object containing prisma client and entities
 * @returns A promise that resolves to the job result
 */
export const perform = async (args: any, context: any) => {
  console.log('[ExampleJob] Running with args:', args);
  
  // You can access the Prisma client from the context
  // const users = await context.prisma.user.findMany();
  
  // If you've specified entities in your job definition, you can access them directly
  // Example: if your job has "entities": ["User"]
  // const users = await context.entities.User.findMany();
  
  // Simulate some work
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  console.log('[ExampleJob] Completed');
  
  // Return a result (optional)
  return {
    success: true,
    completedAt: new Date().toISOString(),
    message: 'Job completed successfully',
  };
}; 