"use client";

import { useState } from "react";
import Link from "next/link";
import { signOut, useSession } from "next-auth/react";
import { User } from "lucide-react";

export function UserMenu() {
  const { data: session } = useSession();
  const [isOpen, setIsOpen] = useState(false);

  const toggleMenu = () => setIsOpen(!isOpen);
  const closeMenu = () => setIsOpen(false);

  return (
    <div className="relative">
      {session?.user ? (
        <>
          <button
            onClick={toggleMenu}
            className="flex items-center space-x-1 rounded-full p-2 transition-colors hover:bg-gray-100"
          >
            {session.user.image ? (
              <img
                src={session.user.image}
                alt={session.user.name || "User"}
                className="h-8 w-8 rounded-full"
              />
            ) : (
              <div className="flex h-8 w-8 items-center justify-center rounded-full bg-gray-200">
                <User className="h-5 w-5 text-gray-500" />
              </div>
            )}
          </button>

          {isOpen && (
            <>
              <div
                className="fixed inset-0 z-10"
                onClick={closeMenu}
              ></div>
              <div className="absolute right-0 z-20 mt-2 w-48 rounded-md bg-white py-1 shadow-lg ring-1 ring-black ring-opacity-5">
                <div className="border-b px-4 py-2">
                  <p className="text-sm font-medium">{session.user.name}</p>
                  <p className="truncate text-xs text-gray-500">
                    {session.user.email}
                  </p>
                </div>
                <Link
                  href="/profile"
                  onClick={closeMenu}
                  className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >
                  Profile
                </Link>
                <Link
                  href="/settings"
                  onClick={closeMenu}
                  className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100"
                >
                  Settings
                </Link>
                <button
                  onClick={() => signOut({ callbackUrl: "/" })}
                  className="block w-full px-4 py-2 text-left text-sm text-gray-700 hover:bg-gray-100"
                >
                  Sign out
                </button>
              </div>
            </>
          )}
        </>
      ) : (
        <div className="flex items-center space-x-4">
          <Link
            href="/login"
            className="text-sm font-bold text-gray-700 hover:text-gray-900"
          >
            Sign in
          </Link>
          <Link
            href="/register"
            className="rounded-md bg-gray-900 px-4 py-2 text-sm font-bold text-white hover:bg-gray-700"
          >
            Sign up
          </Link>
        </div>
      )}
    </div>
  );
} 