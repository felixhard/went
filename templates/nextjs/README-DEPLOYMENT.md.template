# Deploying Your App to Vercel

This guide provides step-by-step instructions to deploy your Next.js application to Vercel, with specific focus on database configuration using Supabase.

## Prerequisites

- A GitHub, GitLab, or Bitbucket account where your project is hosted
- A Vercel account (you can sign up for free at [vercel.com](https://vercel.com))
- A Supabase project (if using Supabase for your database)

## Preparing Your Database Connection

### Supabase Configuration

If you're using Supabase as your database provider, you'll need to update your connection string in your production environment:

1. Log in to your Supabase dashboard
2. Select your project
3. Press **Connect** → and go to the tab named **ORMs**
4. The "Tool" should be Prisma.
4. Under the **.env.local** tab you can find your new connection strings.
5. Under the **prisma/schema.prisma** you can find how you should edit your schema.prisma file.
5. Replace `[YOUR-PASSWORD]` with your database password

### Update Prisma Schema for Production

For optimal performance with Supabase and Vercel, update your `prisma/schema.prisma` file to include both connection string and direct URL:

```prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // Add this line for better performance with Supabase + Vercel
}
```

This configuration uses:
- `url`: Connection pooled URL (for most operations)
- `directUrl`: Direct connection URL (for migrations and introspection)

## Setting Up Environment Variables

Before deploying, ensure these environment variables are properly configured:

### Required Environment Variables

```
# Database
DATABASE_URL="your-database-url"
DIRECT_URL="your-direct-url"

# NextAuth.js
NEXTAUTH_SECRET="your-nextauth-secret"
NEXTAUTH_URL="https://your-production-url.vercel.app"

# OAuth Providers (if applicable)
GOOGLE_CLIENT_ID="your-google-client-id"
GOOGLE_CLIENT_SECRET="your-google-client-secret"
GITHUB_CLIENT_ID="your-github-client-id"
GITHUB_CLIENT_SECRET="your-github-client-secret"
```

## Deploying to Vercel

### Step 1: Connect Your Repository

1. Log in to [Vercel](https://vercel.com)
2. Click "Add New..." → "Project"
3. Import your repository from GitHub/GitLab/Bitbucket
4. Select the repository containing your Next.js app

### Step 2: Configure Project

1. Keep the default settings for the framework preset (Next.js)
2. Configure the root directory if your app is not in the project root
3. Under "Build and Output Settings", ensure:
   - Build Command: `npm run build` (default)
   - Output Directory: `.next` (default)
   - Install Command: `npm install` (default)

### Step 3: Environment Variables

1. Expand the "Environment Variables" section
2. Add all the required environment variables listed above
3. Make sure to use the production values for URLs and secrets

### Step 4: Deploy

1. Click "Deploy"
2. Wait for the build and deployment to complete
3. Vercel will provide a URL for your deployed application

### Step 5: Check Deployment

1. Visit your deployment URL
2. Verify all features are working correctly
3. Check database connectivity and authentication features

## Setting Up Custom Domain (Optional)

1. In your project dashboard, navigate to "Settings" → "Domains"
2. Add your custom domain
3. Follow the DNS configuration instructions provided by Vercel

## Troubleshooting Database Connectivity

If you encounter database connection issues:

1. Verify your `DATABASE_URL` and `DIRECT_URL` are correctly set in environment variables
2. Ensure your Supabase project allows connections from Vercel's IP ranges
3. Check if the database password is correct
4. Verify that the Supabase database is not in a paused state

## Source Control Best Practices

### .gitignore Configuration

Ensure your project has a proper `.gitignore` file that includes:

```
# Environment variables
.env
.env.*
!.env.example

# Next.js build output
.next/
out/

# Prisma
/prisma/*.db
/prisma/migrations/

# Dependencies
/node_modules
```

This prevents sensitive environment variables and large build files from being committed to your repository.

## Automatic Deployments

By default, Vercel will deploy automatically when you push changes to your repository. You can configure this behavior in your project settings under "Git Integration".

## Deployment Preview URLs

Vercel automatically creates preview deployments for pull requests, allowing you to test changes before merging them into production. These preview URLs are available in the PR comments and in your Vercel dashboard.

## Need Help?

- Vercel Documentation: [vercel.com/docs](https://vercel.com/docs)
- NextAuth.js Documentation: [next-auth.js.org](https://next-auth.js.org)
- Supabase Documentation: [supabase.com/docs](https://supabase.com/docs)
- Prisma Documentation: [prisma.io/docs](https://www.prisma.io/docs) 